// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    /* GLOBAL REPOSITORIES FOR BUILD SCRIPT, DEPENDENCIES SERVERS */
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
    }
    /* REFERENCES ON BUILD PLUGINS */
    dependencies {
    }
}

/* Enable/Disable PreDex step during the build on CIS. */
project.ext.preDexLibs = !project.hasProperty('disablePreDex')

subprojects {
    project.plugins.whenPluginAdded { plugin ->
        if ("com.android.build.gradle.AppPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        } else if ("com.android.build.gradle.LibraryPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        }
    }
}

// get Git revision as a NUMBER (subversion style of revision)
def gitRevision() {
    return "git rev-list --count HEAD".execute().text.trim();
}

// include into all project central maven repository
allprojects {
    /* DEFINE REPOSITORIES FOR SUB-PROJECTS */
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
        /* ATTACH CUSTOM BUILDS OF GRADLE PLUGINS FROM '~/gradle/plugins' folder */
        flatDir { dirs rootProject.projectDir.toString() + '/gradle/plugins' }
    }

    /* DEFINE GLOBAL VARIABLES */
    ext {
        /* Android Gradle Plugin version */
        gradlePluginVersion = project.GRADLE_PLUGIN

        androidCompileSdkVersion = Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
        androidBuildToolsVersion = project.ANDROID_BUILD_TOOLS_VERSION

        /* specify versions of 3rd party libs to use in project */
        androidSupportLib = project.ANDROID_SUPPORT_LIB_VERSION

        /* MIN and TARGET SDKs for our binaries */
        androidTargetSdkVersion = Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
        androidMinSdkVersion = Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)

        /* Enable multi-dex support */
        useMultiDex = Boolean.parseBoolean(project.USE_MULTIDEX)

        /* DEFINE SHOULD TESTING CONFIGURATION BE ENABLED OR NOT */
        useTesting = Boolean.parseBoolean(project.USE_TDD)

        /* SHOULD WE USE ESPRESSO FRAMEWORK OR NOT */
        useEspresso = useTesting & Boolean.parseBoolean(project.USE_ESPRESSO)

        /* DEFINE SHOULD WE USE ROBOLECTRIC TESTS OR NOT */
        useRobolectric = useTesting & Boolean.parseBoolean(project.USE_ROBOLECTRIC)

        /* CODE COVERAGE PLUGIN/TOOL VERSION */
        useJacoco = useTesting & Boolean.parseBoolean(project.USE_JACOCO)
        JaCoCoVersion = project.JACOCO_VERSION
        CoverallsVersion = project.COVERALLS_VERSION

        /* dynamic calculation of git revision, its a part of the app version now */
        GIT_REVISION = "${gitRevision()}"

        /* Maven Publishing - Bintray Credentials */
        USER_NAME = project.USER_NAME
        USER_EMAIL = project.USER_EMAIL
        USER_FULL = project.USER_FULL
        BINTRAY_API_KEY = project.BINTRAY_API_KEY

        /* Maven Publishing - Library Meta Info */
        LIBRARY_PKG = project.LIBRARY_PKG
        LIBRARY_GROUP = project.LIBRARY_GROUP
        LIBRARY_ARTIFACT = project.LIBRARY_ARTIFACT
        LIBRARY_NAME = project.LIBRARY_NAME
        LIBRARY_DESC = project.LIBRARY_DESC
        LIBRARY_URL = project.LIBRARY_URL
        LIBRARY_GIT = project.LIBRARY_GIT
        LIBRARY_LIC = project.LIBRARY_LIC
        LIBRARY_LIC_URL = project.LIBRARY_LIC_URL
        PUBLISHING_DRY_RUN = Boolean.parseBoolean(project.PUBLISHING_DRY_RUN)
    }
}

/* PRINT to output configuration details of the build. */
println new String(new char[80]).replace("\0", "-")
println 'Android Build Tools: ' + project.ANDROID_BUILD_TOOLS_VERSION
println 'Android SDK version: ' + project.ANDROID_BUILD_SDK_VERSION
println 'Android Support Library: ' + project.ANDROID_SUPPORT_LIB_VERSION
println 'Target API: ' + project.ANDROID_BUILD_TARGET_SDK_VERSION
println 'Minimal API: ' + project.ANDROID_BUILD_MIN_SDK_VERSION
println 'Use MultiDex: ' + project.USE_MULTIDEX
println 'Use Tests: ' + project.USE_TDD
println 'Use Espresso: ' + project.USE_ESPRESSO
println 'Use Robolectric: ' + project.USE_ROBOLECTRIC
println 'Use JaCoCo: ' + project.USE_JACOCO
println 'JaCoCo Library: ' + project.JACOCO_VERSION
println 'Coveralls Version: ' + project.COVERALLS_VERSION
println 'Source code GIT Revision: ' + "${gitRevision()}"
println new String(new char[80]).replace("\0", "-")
